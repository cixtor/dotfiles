#!/bin/bash
# https://en.wikipedia.org/wiki/ISO_8601

function usage() {
    echo "Usage:"
    echo "  git commiton yyyy-mm-dd [files]"
    echo "  git commiton yyyy-mm-ddThh [files]"
    echo "  git commiton yyyy-mm-ddThh:ii [files]"
    echo "  git commiton yyyy-mm-ddThh:ii:ss [files]"
}

if [[ "$#" -eq 0 ]]; then
    usage
    exit 1
fi

# default date and time.
INPUT_DATE=$(date +%Y-%m-%d)
INPUT_HOUR="09:00:00"
INPUT_ZONE="-08:00"

# user defined date and time.
MAYBE_DATE=$(echo "$1" | cut -c1-10)
MAYBE_HOUR=$(echo "$1" | cut -c12-19)

# check integrity of the user defined date.
if echo "$MAYBE_DATE" | grep -E -q "^[0-9]{4}-[0-9]{2}-[0-9]{2}$"; then
    INPUT_DATE="$MAYBE_DATE"
else
    usage
    exit 1
fi

# check integrity of the user defined time.
if echo "$MAYBE_HOUR" | grep -E -q "^[0-9]{2}:[0-9]{2}:[0-9]{2}$"; then
    INPUT_HOUR="$MAYBE_HOUR"
elif echo "$MAYBE_HOUR" | grep -E -q "^[0-9]{2}:[0-9]{2}$"; then
    INPUT_HOUR="${MAYBE_HOUR}:00"
elif echo "$MAYBE_HOUR" | grep -E -q "^[0-9]{2}$"; then
    INPUT_HOUR="${MAYBE_HOUR}:00:00"
fi

# automatically add files.
if [[ "$#" -gt 1 ]]; then
    SKIPPED_HEADER="false"
    for FILE in "$@"; do
        if [[ "$SKIPPED_HEADER" == "false" ]]; then
            SKIPPED_HEADER="true"
            continue
        fi
        git add -- "$FILE"
    done
fi

COMMIT_DATE="${INPUT_DATE}T${INPUT_HOUR}${INPUT_ZONE}"

export GIT_AUTHOR_DATE="$COMMIT_DATE"
export GIT_COMMITTER_DATE="$COMMIT_DATE"

echo "[commit] ${GIT_COMMITTER_DATE}"
echo "[author] ${GIT_AUTHOR_DATE}"

git commit
