#!/usr/bin/env python3
from sys import argv
from sys import exit
from os import path
from os import popen
from os import getcwd
from os import listdir
from subprocess import PIPE
from subprocess import STDOUT
from subprocess import Popen

count = 0
table = {}
folder = getcwd()
sizes = [
    "Petabytes",
    "Terabytes",
    "Gigabytes",
    "Megabytes",
    "Kylobytes",
    "Bytes",
]

if len(argv) > 1:
    folder = argv[1]

for resource in listdir(folder):
    count += 1
    fpath = path.join(folder, resource)
    proc = Popen(["du", "-s", "-h", fpath], stdout=PIPE, stderr=STDOUT)
    stdout, stderr = proc.communicate()
    size, fpath = stdout.decode("UTF-8").strip().split("\t")
    sizet = size[len(size) - 1]
    sizeq = size[0:len(size)-1]
    if sizet not in table:
        table[sizet] = []
    table[sizet].append({
        "size": float(sizeq),
        "type": sizet,
        "file": fpath,
    })

for filesize in sizes:
    stype = filesize[0]
    if stype not in table: continue
    lsize = 0 # Longest size
    lline = 0 # Longest line
    ordered = sorted(table[stype],
        key=lambda x: x["size"],
        reverse=True)
    for data in ordered:
        length = len(data["file"].replace(folder + "/", ""))
        if length > lline: lline = length
    lsize = len(str(ordered[0]["size"]))
    lline += lsize + 2 # Add longest size and separator
    title = ("-" * (lsize+1)) # Left separator
    title += "\x20" + filesize + "\x20"
    title += "-" * (lline - len(title))
    print(title) # Print title per group
    for data in ordered:
        tamano = str(data["size"]).rjust(lsize)
        shortFilename = data["file"].replace(folder + "/", "")
        print("{0}{1} {2}".format(tamano,
            data["type"],
            shortFilename))

exit(0)
