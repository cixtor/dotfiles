#!/bin/bash
# Execute custom PHPCode_Sniffer coding standard.
RULESET=(
    '<?xml version="1.0"?>'
    '<ruleset name="PSR99">'
    '  <description>PSR2 without some unnecessary rules.</description>'
    '  <exclude-pattern>*.min.css</exclude-pattern>'
    '  <exclude-pattern>*.min.js</exclude-pattern>'
    '  <rule ref="PSR2">'
    '    <exclude name="Generic.Files.LineLength"/>'
    '    <exclude name="Internal.Tokenizer.Exception"/>'
    '    <exclude name="PSR1.Classes.ClassDeclaration.MissingNamespace" />'
    '    <exclude name="PSR1.Files.SideEffects.FoundWithSymbols" />'
    '  </rule>'
    '  <rule ref="Internal.NoCodeFound">'
    '    <severity>0</severity>'
    '  </rule>'
    '  <rule ref="Generic.Classes.DuplicateClassName"/>'
    '  <rule ref="Generic.CodeAnalysis.EmptyStatement"/>'
    '  <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>'
    '  <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>'
    '  <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>'
    '  <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>'
    '  <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>'
    '  <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>'
    '  <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>'
    '  <rule ref="Generic.ControlStructures.InlineControlStructure"/>'
    '  <rule ref="Generic.Files.LineEndings"/>'
    '  <rule ref="Generic.Files.LineLength"/>'
    '  <rule ref="Generic.Formatting.DisallowMultipleStatements"/>'
    '  <rule ref="Generic.Formatting.SpaceAfterCast"/>'
    '  <rule ref="Generic.Functions.CallTimePassByReference"/>'
    '  <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/>'
    '  <rule ref="Generic.Metrics.CyclomaticComplexity"/>'
    '  <rule ref="Generic.Metrics.NestingLevel"/>'
    '  <rule ref="Generic.NamingConventions.ConstructorName"/>'
    '  <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>'
    '  <rule ref="Generic.NamingConventions.CamelCapsFunctionName"/>'
    '  <rule ref="Generic.PHP.DeprecatedFunctions"/>'
    '  <rule ref="Generic.PHP.DisallowShortOpenTag"/>'
    '  <rule ref="Generic.PHP.ForbiddenFunctions"/>'
    '  <rule ref="Generic.PHP.LowerCaseConstant"/>'
    '  <rule ref="Generic.Strings.UnnecessaryStringConcat"/>'
    '  <rule ref="Generic.WhiteSpace.DisallowTabIndent"/>'
    '  <rule ref="Generic.WhiteSpace.ScopeIndent"/>'
    '  <rule ref="MySource.PHP.EvalObjectFactory"/>'
    '  <rule ref="PEAR.Commenting.ClassComment"/>'
    '  <rule ref="PEAR.Commenting.FileComment"/>'
    '  <rule ref="PEAR.Commenting.FunctionComment"/>'
    '  <rule ref="PEAR.Commenting.InlineComment"/>'
    '  <rule ref="PEAR.ControlStructures.ControlSignature"/>'
    '  <rule ref="PEAR.ControlStructures.MultiLineCondition"/>'
    '  <rule ref="PEAR.Files.IncludingFile"/>'
    '  <rule ref="PEAR.Formatting.MultiLineAssignment"/>'
    '  <rule ref="PEAR.Functions.FunctionCallSignature"/>'
    '  <rule ref="PEAR.Functions.FunctionDeclaration"/>'
    '  <rule ref="PEAR.Functions.ValidDefaultValue"/>'
    '  <rule ref="PEAR.NamingConventions.ValidClassName"/>'
    '  <rule ref="PEAR.WhiteSpace.ScopeClosingBrace"/>'
    '  <rule ref="PSR1.Classes.ClassDeclaration"/>'
    '  <rule ref="PSR1.Files.SideEffects"/>'
    '  <rule ref="PSR2.Classes.ClassDeclaration"/>'
    '  <rule ref="PSR2.Classes.PropertyDeclaration"/>'
    '  <rule ref="PSR2.ControlStructures.ControlStructureSpacing"/>'
    '  <rule ref="PSR2.ControlStructures.ElseIfDeclaration"/>'
    '  <rule ref="PSR2.ControlStructures.SwitchDeclaration"/>'
    '  <rule ref="PSR2.Files.EndFileNewline"/>'
    '  <rule ref="PSR2.Methods.MethodDeclaration"/>'
    '  <rule ref="PSR2.Namespaces.NamespaceDeclaration"/>'
    '  <rule ref="PSR2.Namespaces.UseDeclaration"/>'
    '  <rule ref="Squiz.PHP.CommentedOutCode"/>'
    '  <rule ref="Squiz.PHP.DisallowMultipleAssignments"/>'
    '  <rule ref="Squiz.PHP.DisallowSizeFunctionsInLoops"/>'
    '  <rule ref="Squiz.PHP.DiscouragedFunctions">'
    '    <properties>'
    '      <property name="error" value="true"/>'
    '    </properties>'
    '  </rule>'
    '  <rule ref="Squiz.PHP.EmbeddedPhp"/>'
    '  <rule ref="Squiz.PHP.Eval"/>'
    '  <rule ref="Squiz.PHP.GlobalKeyword"/>'
    '  <rule ref="Squiz.PHP.Heredoc"/>'
    '  <rule ref="Squiz.PHP.InnerFunctions"/>'
    '  <rule ref="Squiz.PHP.LowercasePHPFunctions"/>'
    '  <rule ref="Squiz.PHP.NonExecutableCode"/>'
    '  <rule ref="Squiz.Scope.MemberVarScope"/>'
    '  <rule ref="Squiz.Scope.MethodScope"/>'
    '  <rule ref="Squiz.Scope.StaticThisUsage"/>'
    '  <rule ref="Squiz.WhiteSpace.CastSpacing"/>'
    '  <rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace"/>'
    '  <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>'
    '  <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>'
    '  <rule ref="Squiz.WhiteSpace.OperatorSpacing"/>'
    '  <rule ref="Squiz.WhiteSpace.PropertyLabelSpacing"/>'
    '  <rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>'
    '  <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>'
    '  <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>'
    '  <rule ref="Zend.Files.ClosingTag"/>'
    '</ruleset>'
)

if command -v phpcs &> /dev/null; then
    STANDARD="${HOME}/.psr99.xml"

    if [[ ! -e "$STANDARD" ]]; then
        for LINE in "${RULESET[@]}"; do
            echo "$LINE" 1>> "$STANDARD"
        done
    fi

    /usr/local/bin/phpcs -w \
    --standard="$STANDARD" \
    --report-width=150 \
    --report=full \
    --colors "$@"
fi
