#!/bin/bash
IFS=$'\n'

function report() {
    INDEX=0
    DATES=($(git log | grep "Date"))
    TOTAL=$(git log | grep -c "Date")
    HASHES=($(git log | grep "^commit" | awk '{print $2}'))
    AUTHOR=$(git config --get "user.name")
    EADDRESS=$(git config --get "user.email")
    ORIGINURL=$(git config --get "remote.origin.url")
    echo "Author: ${AUTHOR} <${EADDRESS}>"
    echo "Repository: ${ORIGINURL}"
    for FULLDATE in "${DATES[@]}"; do
        DATE="${FULLDATE:8:100}"
        UNIQUE="${HASHES[INDEX]}"
        echo "${UNIQUE} >>> ${DATE}"
        INDEX=$((INDEX+1))
    done
    echo "Total commits: ${TOTAL}"
}

COMMIT="$1" # Full commit hash.
COMDATE="${2}T09:00:00" # yyyy-mm-dd

if [[ "$COMMIT" == "" ]] || [[ "$COMMIT" =~ help ]]; then
    SCRIPT=$(echo "$0" | rev | cut -d/ -f1 | rev)
    echo "Git Commit Date Fixer"
    echo "  https://cixtor.com/"
    echo "  https://en.wikipedia.org/wiki/Git"
    echo "  https://github.com/cixtor/dotfiles/.bin/"
    echo "Usage:"
    echo "  ${SCRIPT} [commit] [yyyy-mm-dd]       Changes commit date in a commit"
    echo "  ${SCRIPT} -status [username] [pages]  Checks non-synced repositories"
    echo "  ${SCRIPT} -dates                      Prints all commit dates"
    exit 2
fi

if [[ "$1" == "-status" ]]; then
    TOTAL=0
    CHECKED=0
    COUNTER="100"
    USERNAME="${2:-cixtor}"
    NOCHANGES="d158955c3de1219dbdee7368efbfd46c"
    UNTILTHISPAGE="${3:-1}"

    echo ">> Author: https://github.com/${USERNAME}"
    echo ">> Checking repositories in ${UNTILTHISPAGE} page(s)"

    for ((PAGE=1; PAGE<=UNTILTHISPAGE; PAGE++)); do
        PAGEURL="https://github.com/${USERNAME}?tab=repositories&page=${PAGE}"

        if [[ "$PAGE" -eq 1 ]]; then
            # First page doesn't needs the page parameter.
            PAGEURL=$(echo "$PAGEURL" | cut -d "&" -f1)
        fi

        RESPONSE=$(
            curl -X GET --url "$PAGEURL" \
            -H "Mozilla/5.0 (KHTML, like Gecko) Safari/537.36" \
            -H "Accept: text/html,application/xhtml+xml,application/xml" \
            --silent
        )

        for REPOSITORY in $(echo "$RESPONSE" | grep "codeRepository" | cut -d '"' -f2); do
            COUNTER=$((COUNTER + 1))
            LINENUM="${COUNTER:1:100}"
            PROJECT=$(echo "$REPOSITORY" | cut -d "/" -f3)
            DIRECTORY="${HOME}/projects/${PROJECT}"
            TOTAL=$((TOTAL+1))

            # Dot.files are usually in the home directory.
            if [[ "$PROJECT" == "dotfiles" ]]; then
                DIRECTORY="$HOME"
            fi

            if [[ ! -e "$DIRECTORY" ]]; then
                printf "   \x1b[48;5;007m  \x1b[0m %s\x0a" "$DIRECTORY"
                continue
            fi

            # Check if the repository has no changes.
            CHECKED=$((CHECKED+1))
            GITSTATUS=$(git -C "$DIRECTORY" status)
            CHECKSUM=$(echo "$GITSTATUS" | /sbin/md5 | awk "{print \$1}")

            if [[ "$CHECKSUM" == "$NOCHANGES" ]]; then
                printf "   \x1b[48;5;010m  \x1b[0m %s\x0a" "$DIRECTORY"
                continue
            fi

            # Determine the number of commits to push upstream.
            if echo "$GITSTATUS" | grep -q "branch is ahead"; then
                printf "\x20\x20" # column separator.
                HOWMANY=$(echo "$GITSTATUS" | grep "ahead" | cut -d "'" -f3)
                HOWMANY=$(echo "$HOWMANY" | rev | cut -c2-100 | rev)
                printf " \x1b[48;5;014m  \x1b[0m %s" "$DIRECTORY"
                printf " \x1b[0;96m(ahead%s)\x1b[0m\x0a" "$HOWMANY"
                continue
            fi

            # Report additional changes including added, modified, and untracked files.
            printf "   \x1b[48;5;011m  \x1b[0m %s\x0a" "$DIRECTORY"
        done
    done

    echo ">> Checked ${CHECKED} out of ${TOTAL} repositories"
    echo ">> Color Details:"
    echo -e "   \x1b[48;5;007m  \x1b[0m Repository is not in the disk"
    echo -e "   \x1b[48;5;010m  \x1b[0m Repository is synced with remote"
    echo -e "   \x1b[48;5;014m  \x1b[0m There are changes to push live"
    echo -e "   \x1b[48;5;011m  \x1b[0m There are uncommitted changes"
    exit 0
fi

if [[ "$1" == "-dates" ]]; then report; exit 0; fi

git filter-branch -f --env-filter \
"if [ \$GIT_COMMIT == $COMMIT ]; then
export GIT_AUTHOR_DATE='$COMDATE'
export GIT_COMMITTER_DATE='$COMDATE'
fi"

report
