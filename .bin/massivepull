#!/bin/bash
#
# Massive Repository Pull
# http://cixtor.com/
# https://github.com/cixtor/mamutools
#
# Being an autodidact developer I'm always looking new technologies to test out
# in my machine, counting new tools, languages and libraries. Almost sixty percent
# of all that information came to me in GIT Repositories, sometime ago I've created
# a script to clone those repositories mainly hosted on Github to compress those
# files in a BZip2 package, but then I wanted to have a tool to synchronize locally
# the latest version of some projects.
#
# Basically I used to execute the command git pull in many projects to get the latest
# version of some GIT Repository, but after some weeks that folder became tens of
# directories and obviously I don't want to waste my time checking manually all those
# repositories. I can write code, so I wrote a script to use in my crontab schedule
# and every week synchronize automatically all the changes in all the repositories,
# not only in my personal computer, but also in the servers I manage.
#
# 1. The script accept a unique parameter representing a location in the disk.
# 2. Check if the location provided is relative, in that case convert to an absolute path.
# 3. Find all the GIT Repositories in the absolute path specified.
# 4. Print the URL of the repository located generally in the file 'repository/.git/config'
# 5. Execute the command 'git pull' for each repository found.
#

function printDefaultOptions() {
    SCRIPT=$(basename "$0")
    echo "Massive Repository Pull"
    echo "https://github.com/cixtor/mamutools"
    echo "Update Git repositories in given directory"
    echo
    echo "Usage:"
    echo "  ${SCRIPT} ~/Projects/libraries/"
    echo "  ${SCRIPT} ~/Applications/Editor/Plugins/"
    exit 2
}

IFS=$'\n'
FOLDER="$1"
CURRENT_PATH="$(pwd)"

if [[ "$FOLDER" == "" ]]; then
    echo "Missing directory"
    printDefaultOptions
fi

if [ "${FOLDER:0:1}" == "/" ]; then
    BASEPATH="${FOLDER%/}/"
else
    BASEPATH="${CURRENT_PATH}/${FOLDER%/}/"
fi

BASEPATH=$(echo "$BASEPATH" | sed 's/\/\.\//\//g')

if [[ ! -e "$BASEPATH" ]]; then
    echo "Base directory does not exists"
    printDefaultOptions
fi

if ! command -v git &> /dev/null; then
    echo "GIT is not installed - https://git-scm.com/"
    printDefaultOptions
fi

echo -n "Searching..."

find "$BASEPATH" -type d -name ".git" | while read -r FULLPATH; do
    SHORTPATH=$(dirname "$FULLPATH" | sed "s@$HOME@~@")
    FULLPATH=$(dirname "$FULLPATH" | sed "s;//;/;")
    GIT_CONFIG="${FULLPATH}/.git/config"
    PACKAGE=$(basename "$SHORTPATH")

    if [[ -e "$GIT_CONFIG" ]]; then
        REPOSITORY=$(grep "url.=" "$GIT_CONFIG" | tr -d ' ' | cut -d= -f2)
    fi

    echo
    echo -e "Checking for Updates: \x1b[1;34m${PACKAGE}\x1b[0m"
    echo -e "Repository: \x1b[1;36m${REPOSITORY}\x1b[0m"
    echo -e "Directory: \x1b[0;1m${SHORTPATH}\x1b[0m"

    if [[ -e "$FULLPATH" ]]; then
        cd "$FULLPATH" || exit
        git pull 2> /dev/null
        echo "Finished."
    fi
done
