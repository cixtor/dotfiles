{
	"clients": {},

	// Add an additional delay when the auto-complete widget is currently visible.
	// Just like the above "diagnostics_delay_ms", the unit is milliseconds.
	// The total amount of delay would be
	//
	//    diagnostics_delay_ms + diagnostics_additional_delay_auto_complete_ms
	//
	// See also: "diagnostics_delay_ms".
	"diagnostics_additional_delay_auto_complete_ms": 0,

	// Delay showing diagnostics by this many milliseconds.
	// The delay will only kick into action when previously there were
	// no diagnostics in the view. If there were previous diagnostics in the view,
	// then the delay setting here is ignored and diagnostics are updated
	// immediately.
	"diagnostics_delay_ms": 0,

	// Gutter marker for code diagnostics.
	// Valid values are "dot", "circle", "bookmark", "sign" or ""
	"diagnostics_gutter_marker": "dot",


	// Highlight style of code diagnostics.
	// Can be a string, or a mapping of string->string for severity-based styling.
	// Valid string values are "box", "underline", "stippled", "squiggly" or "".
	// When set to a valid string value, all severities will use that style.
	// When set to the empty string (""), no diagnostics are drawn.
	// When disabled, gutter markers are still drawn, unless "diagnostics_gutter_marker"
	// is set to "".
	// Diagnostics which span multiple lines are always drawn with the "box" style.
	// See also: "show_multiline_diagnostics_highlights".
	"diagnostics_highlight_style": {
		"error": "squiggly",
		"warning": "squiggly",
		"info": "stippled",
		"hint": "stippled"
	},

	// Only show diagnostics in the panel with level equal to or less than:
	// error: 1
	// warning: 2
	// info: 3
	// hint: 4
	"diagnostics_panel_include_severity_level": 4,

	// Highlighting style of "highlights": accentuating nearby text entities that
	// are related to the one under your cursor.
	// Valid values are "fill", "box", "underline", "stippled", "squiggly" or "".
	// When set to the empty string (""), no document highlighting is requested.
	"document_highlight_style": "squiggly",

	// Disable Sublime Text's snippet completions.
	"inhibit_snippet_completions": false,

	// Disable Sublime Text's word completions. When set to `true`, this also
	// disables Sublime Text's internal completion sorting algorithm and instead
	// uses the sorting defined by the relevant language server.
	"inhibit_word_completions": true,

	// Show verbose debug messages in the sublime console.
	"log_debug": false,

	// When logging to the "panel" (see "log_server"), if the params of the request or
	// response or notification exceed this many characters, then print a <snip> to
	// the panel instead. If you don't want a limit, set this to zero.
	"log_max_size": 8192,

	// Log communication from and to language servers.
	// Set to an array of values:
	// - "panel" - log to the LSP Language Servers output panel
	// - "remote" - start a local websocket server on port 9981. Can be connected to with
	//              a websocket client to receive the log messages in real time.
	// For backward-compatibility, when set to "true", enables the "panel" logger and when
	// set to "false" disables logging.
	// This output panel can be toggled from the command palette with the
	// command "LSP: Toggle Panel: Language Servers".
	"log_server": [
		// "panel",
		// "remote",
	],

	// A dictionary of code action identifiers that should be triggered on save.
	//
	// Code action identifiers are not officially standardized so refer to specific
	// server's documentation on what is supported but `source.fixAll` is commonly
	// used to apply fix-on-save code actions.
	//
	// This option is also supported in syntax-specific settings and/or in the
	// "settings" section of project files. Settings from all those places will be
	// merged and more specific (syntax and project) settings will override less
	// specific (from LSP or Sublime settings).
	//
	// Only "source.*" actions are supported.
	"lsp_code_actions_on_save": {
		"source.fixAll": true,
		"source.organizeImports": true,
	},

	// Run the server's formatProvider (if supported) on a document before saving.
	// This option is also supported in syntax-specific settings and/or in the
	// "settings" section of project files.
	"lsp_format_on_save": true,

	// The amount of time the code actions on save are allowed to run for.
	"on_save_task_timeout_ms": 2000,

	// The maximum number of characters (approximately) before wrapping in the popup.
	"popup_max_characters_width": 120,

	// The maximum number of characters (approximately) before a scrollbar appears.
	"popup_max_characters_height": 1000,

	// Enable semantic highlighting in addition to standard syntax highlighting (experimental!).
	// Note: Must be supported by the language server and also requires a special rule in the
	// color scheme to work. If you use none of the built-in color schemes from Sublime Text,
	// please see the documentation under
	//   https://lsp.sublimetext.io/customization/#semantic-highlighting
	// for a description about how to configure your color scheme for semantic highlighting.
	"semantic_highlighting": false,

	// Show code actions:
	// "annotation" - show an annotation on the right when code actions are available.
	// "bulb" - show a bulb in the gutter when code actions are available.
	// "" - don't show code actions.
	"show_code_actions": "annotation",

	// Show code actions in hover popup if available
	"show_code_actions_in_hover": true,

	// Show code lens:
	// "annotation" - show an annotation on the right when code actions are available
	// "phantom" - show a phantom on the top when code actions are available
	"show_code_lens": "annotation",

	// Show errors and warnings count in the status bar
	"show_diagnostics_count_in_view_status": false,

	// Show the diagnostics description of the code
	// under the cursor in status bar if available.
	"show_diagnostics_in_view_status": true,

	// Open the diagnostics panel automatically
	// when diagnostics level is equal to or less than:
	// error: 1
	// warning: 2
	// info: 3
	// hint: 4
	"show_diagnostics_panel_on_save": 1,

	// Show the diagnostics with level less than or equal to
	// the given value.
	// error: 1
	// warning: 2
	// info: 3
	// hint: 4
	"show_diagnostics_severity_level": 4,

	// Show diagnostics spanning multiple lines in the view (as outlines).
	// See also: "diagnostics_highlight_style".
	"show_multiline_diagnostics_highlights": true,

	// Show symbol references in Sublime's quick panel instead of the bottom panel.
	"show_references_in_quick_panel": false,

	// Show symbol action links in hover popup if available
	"show_symbol_action_links": false,

	// Show permanent language server status in the status bar.
	"show_view_status": true,
}
