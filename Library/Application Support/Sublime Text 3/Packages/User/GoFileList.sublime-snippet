<snippet>
	<content><![CDATA[
// FileList walks the file tree rooted at root, calling walkFn for each file or
// directory in the tree, including root. All errors that arise visiting files
// and directories are filtered by walkFn. The files are walked in lexical
// order, which makes the output deterministic but means that for very large
// directories Walk can be inefficient. Walk does not follow symbolic links.
func FileList(directory string) ([]string, error) {
	files := []string{}

	var visit = func(path string, info os.FileInfo, err error) error {
		if err != nil {
			return err
		}

		if info.IsDir() {
			return nil
		}

		files = append(files, path)

		return nil
	}

	if err := filepath.Walk(directory, visit); err != nil {
		return []string{}, err
	}

	return files, nil
}
]]></content>
	<tabTrigger>filelist</tabTrigger>
	<scope>source.go</scope>
</snippet>
